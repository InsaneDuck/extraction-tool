package dev.insaneduck.extraction_tool.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;

public class MainGUI extends JFrame
{
    private JPanel main;
    private JTabbedPane tabsPanel;
    private JLabel status;
    private JProgressBar progressBar;

    public MainGUI()
    {
        initialiseUI();
    }

    public JLabel getStatus()
    {
        return status;
    }

    public JProgressBar getProgressBar()
    {
        return progressBar;
    }

    void initialiseUI()
    {
        setTitle("Data Extraction Tool");
        setLayout(new GridLayout());
        setIconImage(Toolkit.getDefaultToolkit().getImage(MainGUI.class.getResource("/logo.jpg")));
        setContentPane(main);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setMinimumSize(new Dimension(550, 700));
        pack();
        setVisible(true);
        setLocationRelativeTo(null);

        tabsPanel.addTab("Generate Template", new GenerateTemplate(this).getGenerateTemplatePanel());
        tabsPanel.addTab("Extract Data", new Extraction(this).getExtractDataPanel());
        tabsPanel.addTab("Settings", new Settings(this).getSettingsPanel());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$()
    {
        main = new JPanel();
        main.setLayout(new GridLayoutManager(3, 4, new Insets(0, 0, 0, 0), -1, -1));
        tabsPanel = new JTabbedPane();
        main.add(tabsPanel, new GridConstraints(1, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
        final Spacer spacer1 = new Spacer();
        main.add(spacer1, new GridConstraints(2, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_FIXED, new Dimension(5, 5), new Dimension(5, 5), new Dimension(5, 5), 0, false));
        final Spacer spacer2 = new Spacer();
        main.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, 1, new Dimension(5, 5), new Dimension(5, 5), new Dimension(5, 5), 0, false));
        status = new JLabel();
        status.setText("Status");
        main.add(status, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        progressBar = new JProgressBar();
        main.add(progressBar, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {return main;}

}
