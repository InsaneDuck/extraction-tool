package dev.insaneduck.extraction_tool.experimental;

import com.formdev.flatlaf.intellijthemes.FlatOneDarkIJTheme;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import dev.insaneduck.extraction_tool.modal.JCheckBoxTree;

import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import java.awt.*;

public class Result extends JFrame
{
    JCheckBoxTree tree = new JCheckBoxTree();
    private JPanel main;
    private JScrollPane scrollPane;

    public Result()
    {

    }

    public Result(DefaultMutableTreeNode defaultMutableTreeNode)
    {
        FlatOneDarkIJTheme.setup();
        setTitle("Result");
        setLayout(new GridLayout());
        setContentPane(main);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setMinimumSize(new Dimension(550, 700));
        pack();
        setVisible(true);
        setLocationRelativeTo(null);
        //panelMain.add(jTabbedPane);
        DefaultTreeModel defaultTreeModel = new DefaultTreeModel(defaultMutableTreeNode);
        tree.setModel(defaultTreeModel);
        //jTree.setMinimumSize(new Dimension(700, 700));
        for (int i = 0; i < tree.getRowCount(); i++)
        {
            tree.expandRow(i);
        }
        scrollPane.setViewportView(tree);

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$()
    {
        main = new JPanel();
        main.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        scrollPane = new JScrollPane();
        main.add(scrollPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {return main;}

}
